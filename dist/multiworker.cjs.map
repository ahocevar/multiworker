{"version":3,"file":"multiworker.cjs","sources":["../node_modules/web-worker/cjs/browser.js","../node_modules/cross-fetch/dist/browser-ponyfill.js","../src/util.js","../src/Post.js","../src/WorkerMessage.js","../src/workerString.js","../src/index.js","../__vite-browser-external"],"sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import fetch from 'cross-fetch';\n\n/**\n * Returns a self-invoking, string representation of a function\n *\n * @param {Function} func\n * @returns {String}\n */\nexport function functionToInstantString(func) {\n  return `(${func.toString()})();`;\n}\n\n/**\n * Returns a string representation of an array of functions.\n * Useful only if the functions are named.\n *\n * @param {Function[]} array - Array of functions\n * @returns {String}\n */\nexport function stringifyFunctionList(array) {\n  return array.reduce((prev, next) => `${prev + next.toString()};`, '');\n}\n\n/**\n * No operation\n */\nexport function noop() {\n}\n\n/**\n * Simple get request.\n *\n * @param {String} url\n * @param {Function} success\n */\nexport function get(url, success) {\n  fetch(url).then((response) => response.text()).then(success).catch(() => {\n    if (url.startsWith('file://')) {\n      url = url.substr(7);\n    }\n    import('fs').then((fs) => {\n      fs.readFile(url, 'utf8', (err, data) => {\n        if (err) {\n          throw err;\n        }\n        success(data);\n      });\n    }).catch((error) => { throw error; });\n  });\n}\n","let count = 0;\n\nclass Post {\n  constructor() {\n    this.id = count++;\n    this.done = false; // This flag is set to true by the worker when it has finished its task\n  }\n}\n\nexport default Post;\n","class MultiWorkerMessage {\n  constructor(instance, post, event) {\n    this.event = event;\n    this.done = !!post.done;\n    this.instance = instance;\n  }\n}\n\nexport default MultiWorkerMessage;\n","import { functionToInstantString } from './util.js';\n\nexport default functionToInstantString(() => {\n  (function () {\n    let currentPost;\n\n    function _sendPost(...args) {\n      currentPost.done = args.shift();\n      const transfers = Array.isArray(args[args.length - 1]) ? args.pop() : undefined;\n      postMessage({ args, post: currentPost }, transfers);\n    }\n\n    globalThis.return = _sendPost.bind(this, true);\n    globalThis.post = _sendPost.bind(this, false);\n\n    globalThis.addEventListener('message', (e) => {\n      currentPost = e.data.post;\n      globalThis.receive.apply(e, e.data.args);\n    }, false);\n  }());\n\n  /* @preserve __MultiWorker_placeholder__ */\n});\n","import Worker from 'web-worker';\nimport {\n  get, functionToInstantString, noop, stringifyFunctionList,\n} from './util.js';\nimport Post from './Post.js';\nimport WorkerMessage from './WorkerMessage.js';\nimport workerString from './workerString.js';\n\nconst _isWorkerBusy = new WeakMap();\n\nclass MultiWorker {\n  /**\n   * @param {Object|Function|String} options An object of options, or simply a function or URL\n   * string to a JS file.\n   * @param {Function} options.callback Default callback used for all responses from workers where\n   * one is not provided with the post method.\n   * @param {Number} [options.threads=1] Number of workers to spawn.\n   * @param {Function[]} [options.dependencies] Array of named functions that can be used globally\n   * in the workers. These functions must be named and not make references to data outside the\n   * function scope.\n   */\n  constructor(worker, options) {\n    if (typeof worker === 'string' || typeof worker === 'function') {\n      options = options || {};\n      options.worker = worker;\n    } else {\n      options = worker;\n    }\n    worker = (options.worker !== undefined) ? options.worker : options;\n\n    if (typeof worker === 'string' && !/^!?\\(?\\s*function\\s*\\([^)]*\\)\\s*\\{/.test(worker)) {\n      // URL or JS file\n      get(worker, (text) => {\n        this.worker = text;\n        this._init();\n      });\n    } else {\n      // string or function\n      setTimeout(() => {\n        this.worker = typeof worker === 'function' ? functionToInstantString(worker) : worker;\n        this._init();\n      });\n    }\n\n    // Set properties from settings\n    //--------------------------------------------------\n    this.callback = options.callback || noop;\n    this.threads = options.threads || 1;\n    this.dependencies = options.dependencies || [];\n\n    // Set generic properties\n    //--------------------------------------------------\n    this._initProperties();\n  }\n\n  /**\n   * Send a message to the MultiWorker instance. Accepts an arbitrary number of arguments, followed\n   * by an optional callback to deal with the response from the worker.\n   *\n   * @param {...*} arguments\n   * @param {Function} [callback]\n   * @param {Array<Transferable>} [transfers]\n   * @returns {MultiWorker}\n   */\n  post(...args) {\n    const transfers = Array.isArray(args[args.length - 1]) ? args.pop() : undefined;\n    const cb = typeof args[args.length - 1] === 'function' ? args.pop() : this.callback;\n\n    this._process(args, cb, transfers);\n\n    return this;\n  }\n\n  /**\n   * Terminate the instance. All workers associated with the instance will be terminated. Once this\n   * method is called, the instance can no longer be used.\n   *\n   * By default, all current and queued processes will finish before the instance is terminated,\n   * unless true is passed as first parameter.\n   *\n   * If a function is passed as the first parameter, the instance will wait to complete the current\n   * queue, as per default behaviour, then execute the callback once finished.\n   *\n   * @param {Boolean|Function} [instant=false] Set to true to terminate immediately, or pass a\n   * callback function\n   * @param {function} [callback]\n   * @returns {MultiWorker}\n   *\n   * @example\n   *       // Wait for post to return, then terminate\n   *     worker.post(10).terminate();\n   *\n   *     // Wait for post to return, then terminate and run the callback\n   *     worker.post(10).terminate(function() { console.log('foo') });\n   *\n   *     // Terminate instantly, without waiting for result from post\n   *     worker.post(10).terminate(true);\n   */\n  terminate(instant = false, callback) {\n    if (typeof instant === 'function') {\n      callback = instant;\n      instant = false;\n    }\n\n    if (instant || (this.ready && !this.processCount)) {\n      this.workerList.forEach((worker) => worker.terminate());\n      this._initProperties();\n      this.threads = 0;\n      delete this.terminateWhenFree;\n      if (typeof callback === 'function') callback();\n    } else {\n      this.terminateWhenFree = callback || true;\n    }\n    return this;\n  }\n\n  _init() {\n    this.ready = true;\n    this._initThreads();\n    this._processQueue();\n  }\n\n  _process(args, cb, transfers) {\n    const worker = this._availableWorker;\n    const post = new Post(transfers);\n\n    const payload = {\n      args,\n      post,\n    };\n\n    if (this.ready && worker) {\n      this._inProgressData[post.id] = {\n        cb,\n        worker,\n      };\n\n      worker.postMessage(payload, transfers);\n      _isWorkerBusy.set(worker, true);\n      this.processCount++;\n    } else {\n      this.queue.push([args, cb, transfers]);\n    }\n  }\n\n  _initProperties() {\n    this.ready = false;\n    this.workerList = [];\n    this.queue = [];\n    this.processCount = 0;\n    this._inProgressData = {};\n  }\n\n  _initThreads() {\n    let i = this.threads;\n    while (i--) {\n      const worker = new Worker(this._blobUrl);\n\n      worker.addEventListener('message', this.constructor._defaultMessageEvent.bind(this), false);\n      this.workerList.push(worker);\n    }\n  }\n\n  /**\n   * The default event function used internally to handle messages coming from the workers.\n   *\n   * @private\n   * @param event\n   */\n  static _defaultMessageEvent(event) {\n    const { post } = event.data;\n    const { cb } = this._inProgressData[post.id];\n    const context = new WorkerMessage(this, post, event);\n\n    if (post.done) {\n      this._processFinished(post.id);\n    }\n\n    cb.apply(context, event.data.args);\n\n    if (post.done) {\n      this._processQueue();\n    }\n  }\n\n  _processFinished(id) {\n    this.processCount--;\n    const { worker } = this._inProgressData[id];\n    _isWorkerBusy.set(worker, false);\n    delete this._inProgressData[id];\n    return this;\n  }\n\n  _processQueue() {\n    if (this.queue.length && this.processCount < this.threads) {\n      const nextProcess = this.queue.shift();\n      this._process(...nextProcess);\n      this._processQueue();\n    } else if (this.terminateWhenFree && !this.processCount) {\n      this.terminate(true, this.terminateWhenFree);\n    }\n    return this;\n  }\n\n  /**\n   * Return first free worker or false\n   *\n   * @private\n   * @returns {Worker|Boolean}\n   */\n  get _availableWorker() {\n    const list = this.workerList;\n    for (let i = 0, len = list.length; i < len; i++) {\n      if (!_isWorkerBusy.get(list[i])) {\n        return list[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Return the full worker JavaScript code to be run inside the worker as a string.\n   *\n   * @private\n   * @returns {String}\n   */\n  get _workerString() {\n    return workerString.replace('/* @preserve __MultiWorker_placeholder__ */', this._dependencyString + this.worker);\n  }\n\n  /**\n   * Generate and return a blobUrl URL to be used by the workers.\n   *\n   * @private\n   * @returns {String}\n   */\n  get _blobUrl() {\n    if (!this._blobUrlCached) {\n      this._blobUrlCached = typeof Blob === 'undefined'\n        ? `data:text/javascript;base64,${Buffer.from(this._workerString, 'binary').toString('base64')}`\n        : URL.createObjectURL(new Blob([this._workerString], {\n          type: 'application/javascript',\n        }));\n    }\n    return this._blobUrlCached;\n  }\n\n  /**\n   * Return a string representation of the instance's dependency functions to be added to the\n   * worker code string.\n   *\n   * @private\n   * @returns {String}\n   */\n  get _dependencyString() {\n    return stringifyFunctionList(this.dependencies);\n  }\n}\n\nexport default MultiWorker;\n","export default {}"],"names":["browser","Worker","self2","global2","self","this","__self__","fetch","DOMException","prototype","F","exports2","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","name","String","test","TypeError","toLowerCase","value","items","iterator","next","shift","done","headers","map","Headers","forEach","append","Array","isArray","header","getOwnPropertyNames","body","bodyUsed","Promise","reject","reader","resolve","onload","result","onerror","error","blob","FileReader","promise","fileReaderReady","readAsArrayBuffer","buf","slice","view","Uint8Array","byteLength","set","buffer","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","bufferClone","get","type","rejected","consumed","Error","arrayBuffer","then","readBlobAsArrayBuffer","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","normalizeName","normalizeValue","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","iteratorFor","values","entries","methods","input","options","method","upcased","Request","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","bodyInit","status","ok","statusText","clone","Response","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","abortXhr","onreadystatechange","readyState","removeEventListener","send","polyfill","fetch2","defineProperty","ponyfill","ctx","exports","func","count","id","instance","post","event","functionToInstantString","currentPost","args","transfers","pop","return","_sendPost","bind","data","receive","apply","_isWorkerBusy","WeakMap","worker","success","_init","catch","startsWith","substr","fs","readFile","noop","threads","dependencies","_initProperties","cb","_process","terminate","instant","ready","processCount","workerList","terminateWhenFree","_initThreads","_processQueue","_availableWorker","Post","payload","_inProgressData","postMessage","queue","_blobUrl","_defaultMessageEvent","context","WorkerMessage","_processFinished","nextProcess","list","len","_workerString","workerString","_dependencyString","_blobUrlCached","Buffer","from","URL","createObjectURL","reduce","prev"],"mappings":"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"}